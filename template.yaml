AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-python312-template

Parameters:
  Stage:
    Type: String
    Default: local
    AllowedValues:
      - local
      - dev
      - stg
      - prod
    Description: Enviromnent stage name
  ApiVersion:
    Type: String
    Default: latest
    Description: API Semantic Version
  ApiCorsAllowedOrigins:
    Type: String
    Default: http://localhost:3000,http://localhost:3005
    Description: comma separated allowed origins for CORS

Globals: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
  Function:
    Timeout: 30
    MemorySize: 1024
    Runtime: python3.12

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
    Environment:
      Variables:
        STAGE: !Ref Stage
  Api:
    TracingEnabled: true

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Name: !Sub "${Stage}-sam-api"
      Description: "API Gateway for SAM Python 3.12"
      Tags:
        STAGE: !Ref Stage

  ApiHandler:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      FunctionName: !Sub "${Stage}-sam-APIHandler"
      Handler: v1/handlers/app.lambda_handler
      CodeUri: src
      Description: Api handler function
      Architectures:
        - x86_64
      Tracing: Active
      Events:
        RestApi:
          Type: Api # More info about API Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-api.html
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY
      Environment:
        Variables:
          API_VERSION: !Ref ApiVersion
          CORS_ALLOWED_ORIGINS: !Ref ApiCorsAllowedOrigins
          POWERTOOLS_SERVICE_NAME: SamApiService
          POWERTOOLS_METRICS_NAMESPACE: SamApi
          LOG_LEVEL: INFO
      Tags:
        LambdaPowertools: python

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Sub ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName: !Ref ApplicationResourceGroup
      AutoConfigurationEnabled: true

Outputs:
  ApiGatewayUrl:
    Description: "API Swagger URL"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/swagger"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"
